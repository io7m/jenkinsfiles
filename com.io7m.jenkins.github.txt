#!groovy

pipeline {

  agent none

  stages {
    stage('Build') {
      parallel {
        stages {
          stage('Build Linux') {
            stage('Build:linux:openjdk-11-hotspot') {
              agent {
                label 'linux'
              }
              tools {
                jdk   'openjdk-11-hotspot'
                maven 'maven-3.6.3'
              }
              steps {
                withMaven(
                  maven: 'maven-3.6.3',
                  mavenLocalRepo: '.repository') {
                  sh 'env | sort'
                  sh 'mvn -C -e -U clean install site'
                }
              }
            }
            stage('Build:linux:openjdk-15-hotspot') {
              agent {
                label 'linux'
              }
              tools {
                jdk   'openjdk-15-hotspot'
                maven 'maven-3.6.3'
              }
              steps {
                withMaven(
                  maven: 'maven-3.6.3',
                  mavenLocalRepo: '.repository') {
                  sh 'env | sort'
                  sh 'mvn -C -e -U clean install site'
                }
              }
            }
          }

          stage('Build Windows') {
            stage('Build:windows:openjdk-11-hotspot') {
              agent {
                label 'windows'
              }
              tools {
                jdk   'openjdk-11-hotspot'
                maven 'maven-3.6.3'
              }
              steps {
                withMaven(
                  maven: 'maven-3.6.3',
                  mavenLocalRepo: '.repository') {
                  sh 'env | sort'
                  sh 'mvn -C -e -U clean install site'
                }
              }
            }
            stage('Build:windows:openjdk-15-hotspot') {
              agent {
                label 'windows'
              }
              tools {
                jdk   'openjdk-15-hotspot'
                maven 'maven-3.6.3'
              }
              steps {
                withMaven(
                  maven: 'maven-3.6.3',
                  mavenLocalRepo: '.repository') {
                  sh 'env | sort'
                  sh 'mvn -C -e -U clean install site'
                }
              }
            }
          }
        }
      }
    }

    stage('Deploy:linux:openjdk-11-hotspot') {
      agent {
        label 'linux'
      }
      tools {
        jdk   'openjdk-11-hotspot'
        maven 'maven-3.6.3'
      }
      steps {
        script {
          def isTagged = sh(returnStatus: true, script: "git describe --contains HEAD 2>/dev/null") == 0
          def pom = readMavenPom file: 'pom.xml'
          def isSnapshot = pom.version.endsWith("-SNAPSHOT")

          if (isSnapshot || isTagged) {
            if (isSnapshot) {
              echo "${pom.version} is a -SNAPSHOT version; deploy to Central"
            }
            if (isTagged) {
              echo "current git commit is tagged; deploy to Central"
            }
            withMaven(
              maven: 'maven-3.6.3',
              mavenLocalRepo: '.repository') {
              sh 'env | sort'
              sh 'mvn -Dbnd.baseline.skip=true -Dcheckstyle.skip=true -Denforcer.skip=true -DskipTests=true -Dspotbugs.skip=true -Dmdep.analyze.skip -Dio7m.release=true -Dio7m.deployment=true deploy'
            }
          }
        }
      }
    }
  }

  post {
    success {
      node('starfruit-mq') {
        script {
          withMaven(
            maven: 'maven-3.6.3',
            mavenLocalRepo: '.repository') {
            withCredentials([
              usernamePassword(
                credentialsId: 'arc7-jms-credentials',
                passwordVariable: 'JENKINS_JMS_PASSWORD',
                usernameVariable: 'JENKINS_JMS_USER'
              ),
              file(
                credentialsId: 'arc7-jenkins-trust-store',
                variable: 'JENKINS_JMS_TRUST_STORE'
              ),
              string(
                credentialsId: 'arc7-jenkins-trust-store-password',
                variable: 'JENKINS_JMS_TRUST_STORE_PASSWORD'
              )
            ]) {
              sh ".jenkins/notify.sh success"
            }
          }
        }
      }
    }
    failure {
      node('starfruit-mq') {
        script {
          withMaven(
            maven: 'maven-3.6.3',
            mavenLocalRepo: '.repository') {
            withCredentials([
              usernamePassword(
                credentialsId: 'arc7-jms-credentials',
                passwordVariable: 'JENKINS_JMS_PASSWORD',
                usernameVariable: 'JENKINS_JMS_USER'
              ),
              file(
                credentialsId: 'arc7-jenkins-trust-store',
                variable: 'JENKINS_JMS_TRUST_STORE'
              ),
              string(
                credentialsId: 'arc7-jenkins-trust-store-password',
                variable: 'JENKINS_JMS_TRUST_STORE_PASSWORD'
              )
            ]) {
              sh ".jenkins/notify.sh failure"
            }
          }
        }
      }
    }
  }
}

